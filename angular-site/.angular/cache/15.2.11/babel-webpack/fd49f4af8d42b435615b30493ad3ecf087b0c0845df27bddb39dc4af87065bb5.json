{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./global.service\";\nexport let PhoneHighlighterDirective = /*#__PURE__*/(() => {\n  class PhoneHighlighterDirective {\n    constructor(displayPhone, globalService) {\n      this.displayPhone = displayPhone;\n      this.globalService = globalService;\n    }\n    onKeyDown(event) {\n      const value = this.displayPhone.nativeElement.value + event.key;\n      if (!value.match(this.globalService.phoneRegex)) {\n        // if we do not match proper email regex, highlight!\n        this.displayPhone.nativeElement.setAttribute('style', 'color: rgb(239 68 68);');\n      } else {\n        this.displayPhone.nativeElement.removeAttribute('style', 'color: rgb(239 68 68);');\n      }\n    }\n    static #_ = this.ɵfac = function PhoneHighlighterDirective_Factory(t) {\n      return new (t || PhoneHighlighterDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.GlobalService));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: PhoneHighlighterDirective,\n      selectors: [[\"\", \"appPhoneSyntaxHighlighter\", \"\"]],\n      hostBindings: function PhoneHighlighterDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function PhoneHighlighterDirective_keydown_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          });\n        }\n      }\n    });\n  }\n  return PhoneHighlighterDirective;\n})();\nexport let EmailHighlighterDirective = /*#__PURE__*/(() => {\n  class EmailHighlighterDirective {\n    constructor(displayEmail, globalService) {\n      this.displayEmail = displayEmail;\n      this.globalService = globalService;\n    }\n    onKeyDown(event) {\n      const value = this.displayEmail.nativeElement.value + event.key;\n      if (!value.match(this.globalService.emailRegex)) {\n        // if we do not match proper email regex, highlight!\n        this.displayEmail.nativeElement.setAttribute('style', 'color: rgb(239 68 68);');\n      } else {\n        this.displayEmail.nativeElement.removeAttribute('style', 'color: rgb(239 68 68);');\n      }\n    }\n    static #_ = this.ɵfac = function EmailHighlighterDirective_Factory(t) {\n      return new (t || EmailHighlighterDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.GlobalService));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: EmailHighlighterDirective,\n      selectors: [[\"\", \"appEmailSyntaxHighlighter\", \"\"]],\n      hostBindings: function EmailHighlighterDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown\", function EmailHighlighterDirective_keydown_HostBindingHandler($event) {\n            return ctx.onKeyDown($event);\n          });\n        }\n      }\n    });\n  }\n  return EmailHighlighterDirective;\n})();\nexport let ClickOutsideDirective = /*#__PURE__*/(() => {\n  class ClickOutsideDirective {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.clickOutside = new EventEmitter();\n    }\n    onClick(target) {\n      const clickedInside = this.elementRef.nativeElement.contains(target);\n      if (!clickedInside) {\n        this.clickOutside.emit();\n      }\n    }\n    static #_ = this.ɵfac = function ClickOutsideDirective_Factory(t) {\n      return new (t || ClickOutsideDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: ClickOutsideDirective,\n      selectors: [[\"\", \"appClickOutside\", \"\"]],\n      hostBindings: function ClickOutsideDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function ClickOutsideDirective_click_HostBindingHandler($event) {\n            return ctx.onClick($event.target);\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      outputs: {\n        clickOutside: \"clickOutside\"\n      }\n    });\n  }\n  return ClickOutsideDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}